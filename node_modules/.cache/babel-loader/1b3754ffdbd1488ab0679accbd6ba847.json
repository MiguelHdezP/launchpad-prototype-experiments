{"ast":null,"code":"var _jsxFileName = \"/Users/miguel_hernandez1/Desktop/Files/TrainingCode/LaunchpadPrototypesForTesting/launchpad-prototype-experiments/src/components/configuration-side-bar/ConfigurationSideBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ConfigurationSideBar.scss\";\nimport { Link } from \"react-router-dom\";\nimport { BsGearFill, BsXLg } from \"react-icons/bs\";\nimport { ConfigToday, ConfigApps, ConfigCustom, ConfigSearch } from \"./PageConfigurations\"; //<></>  </>\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ConfigurationSideBar(props) {\n  _s();\n\n  const {\n    toggleSideBar,\n    sidebarVisible,\n    toggleSearchSort,\n    appsToBeDisplayed,\n    chooseLinkTarget,\n    activeCount,\n    scrollGlances\n  } = props;\n  const [configPerPage, setConfigPerPage] = useState(\"\");\n\n  let populateSideBar = () => {\n    const pathname = window.location.pathname;\n    toggleSideBar();\n    setConfigPerPage(pathname);\n  };\n\n  let labelPanel = \"\";\n\n  switch (configPerPage) {\n    case \"/today\":\n      labelPanel = \"Today\";\n      break;\n\n    case \"/\":\n      labelPanel = \"Apps\";\n      break;\n\n    case \"/apps\":\n      labelPanel = \"Apps\";\n      break;\n\n    case \"/protocols\":\n      labelPanel = \"Protocols\";\n      break;\n\n    case \"/announcements\":\n      labelPanel = \"Announcements\";\n      break;\n\n    case \"/messages\":\n      labelPanel = \"Messages\";\n      break;\n\n    case \"/ddashboard\":\n      labelPanel = \"Dashboard\";\n      break;\n\n    case \"/reports\":\n      labelPanel = \"Reports\";\n      break;\n\n    case \"/search\":\n      labelPanel = \"Search\";\n      break;\n\n    case \"/settings\":\n      labelPanel = \"Settings\";\n      break;\n\n    default:\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navBar\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: \"menu-bars\",\n        title: \"Configuration options\",\n        children: /*#__PURE__*/_jsxDEV(BsGearFill, {\n          onClick: populateSideBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: sidebarVisible ? \"nav-menu active\" : \"nav-menu\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: \"menu-bars\",\n        title: \"Close config panel\",\n        children: /*#__PURE__*/_jsxDEV(BsXLg, {\n          onClick: toggleSideBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Config Options - \", labelPanel]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-menu-configOptions\",\n        children: configPerPage === \"/apps\" && /*#__PURE__*/_jsxDEV(ConfigApps, {\n          toggleSearchSort: toggleSearchSort,\n          appsToBeDisplayed: appsToBeDisplayed,\n          activeCount: activeCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this) || configPerPage === \"/today\" && /*#__PURE__*/_jsxDEV(ConfigToday, {\n          chooseLinkTarget: chooseLinkTarget,\n          scrollGlances: scrollGlances\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this) || configPerPage === \"/protocols\" && /*#__PURE__*/_jsxDEV(ConfigCustom, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 48\n        }, this) || configPerPage === \"/announcements\" && /*#__PURE__*/_jsxDEV(ConfigCustom, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 52\n        }, this) || configPerPage === \"/messages\" && /*#__PURE__*/_jsxDEV(ConfigCustom, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 47\n        }, this) || configPerPage === \"/ddashboard\" && /*#__PURE__*/_jsxDEV(ConfigCustom, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 49\n        }, this) || configPerPage === \"/reports\" && /*#__PURE__*/_jsxDEV(ConfigCustom, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 46\n        }, this) || configPerPage === \"/search\" && /*#__PURE__*/_jsxDEV(ConfigSearch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 45\n        }, this) || configPerPage === \"/settings\" && /*#__PURE__*/_jsxDEV(ConfigCustom, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ConfigurationSideBar, \"T9XEHyVSaPbKIM+q5tK0Zv1Ts8M=\");\n\n_c = ConfigurationSideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfigurationSideBar\");","map":{"version":3,"sources":["/Users/miguel_hernandez1/Desktop/Files/TrainingCode/LaunchpadPrototypesForTesting/launchpad-prototype-experiments/src/components/configuration-side-bar/ConfigurationSideBar.jsx"],"names":["React","useState","Link","BsGearFill","BsXLg","ConfigToday","ConfigApps","ConfigCustom","ConfigSearch","ConfigurationSideBar","props","toggleSideBar","sidebarVisible","toggleSearchSort","appsToBeDisplayed","chooseLinkTarget","activeCount","scrollGlances","configPerPage","setConfigPerPage","populateSideBar","pathname","window","location","labelPanel"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./ConfigurationSideBar.scss\";\nimport { Link } from \"react-router-dom\";\nimport { BsGearFill, BsXLg } from \"react-icons/bs\";\nimport {\n  ConfigToday,\n  ConfigApps,\n  ConfigCustom,\n  ConfigSearch,\n} from \"./PageConfigurations\";\n\n//<></>  </>\nexport default function ConfigurationSideBar(props) {\n  const {\n    toggleSideBar,\n    sidebarVisible,\n    toggleSearchSort,\n    appsToBeDisplayed,\n    chooseLinkTarget,\n    activeCount,\n    scrollGlances,\n  } = props;\n  const [configPerPage, setConfigPerPage] = useState(\"\");\n  let populateSideBar = () => {\n    const pathname = window.location.pathname;\n    toggleSideBar();\n    setConfigPerPage(pathname);\n  };\n\n  let labelPanel = \"\";\n  switch (configPerPage) {\n    case \"/today\":\n      labelPanel = \"Today\";\n      break;\n    case \"/\":\n      labelPanel = \"Apps\";\n      break;\n    case \"/apps\":\n      labelPanel = \"Apps\";\n      break;\n    case \"/protocols\":\n      labelPanel = \"Protocols\";\n      break;\n    case \"/announcements\":\n      labelPanel = \"Announcements\";\n      break;\n    case \"/messages\":\n      labelPanel = \"Messages\";\n      break;\n    case \"/ddashboard\":\n      labelPanel = \"Dashboard\";\n      break;\n    case \"/reports\":\n      labelPanel = \"Reports\";\n      break;\n    case \"/search\":\n      labelPanel = \"Search\";\n      break;\n    case \"/settings\":\n      labelPanel = \"Settings\";\n      break;\n    default:\n  }\n  return (\n    <>\n      <div className=\"navBar\">\n        <Link to=\"#\" className=\"menu-bars\" title=\"Configuration options\">\n          <BsGearFill onClick={populateSideBar} />\n        </Link>\n      </div>\n      <nav className={sidebarVisible ? \"nav-menu active\" : \"nav-menu\"}>\n        <Link to=\"#\" className=\"menu-bars\" title=\"Close config panel\">\n          <BsXLg onClick={toggleSideBar} />\n        </Link>\n        <h4>Config Options - {labelPanel}</h4>\n        <div className=\"nav-menu-configOptions\">\n          {(configPerPage === \"/apps\" && (\n            <ConfigApps\n              toggleSearchSort={toggleSearchSort}\n              appsToBeDisplayed={appsToBeDisplayed}\n              activeCount={activeCount}\n            />\n          )) ||\n            (configPerPage === \"/today\" && (\n              <ConfigToday\n                chooseLinkTarget={chooseLinkTarget}\n                scrollGlances={scrollGlances}\n              />\n            )) ||\n            (configPerPage === \"/protocols\" && <ConfigCustom />) ||\n            (configPerPage === \"/announcements\" && <ConfigCustom />) ||\n            (configPerPage === \"/messages\" && <ConfigCustom />) ||\n            (configPerPage === \"/ddashboard\" && <ConfigCustom />) ||\n            (configPerPage === \"/reports\" && <ConfigCustom />) ||\n            (configPerPage === \"/search\" && <ConfigSearch />) ||\n            (configPerPage === \"/settings\" && <ConfigCustom />)}\n        </div>\n      </nav>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}