{"ast":null,"code":"var _jsxFileName = \"/Users/miguel_hernandez1/Desktop/Files/TrainingCode/LaunchpadPrototypesForTesting/launchpad-prototype-experiments/src/components/single-application/SingleApplication.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./SingleApplication.scss\";\nimport { iconConnectM, iconPCT, iconPower } from \"../AssetsFiles\";\nimport { BsFillPinFill } from \"react-icons/bs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SingleApplication(props) {\n  _s();\n\n  const {\n    appName,\n    appIcon,\n    applicationType,\n    id,\n    recentApplications,\n    pinnedApplications,\n    toogleModalAction\n  } = props;\n  const [hoverIcon, setHoverIcon] = useState(false);\n  let validApps = false;\n  let urlAppOpen = \"\",\n      windowModeType = \"\",\n      windowMode = \"\",\n      iconApp = \"\";\n\n  switch (appName) {\n    case \"Connect Messenger\":\n      if (id === 592) {\n        urlAppOpen = \"/messageCenterWinTouch\";\n        windowModeType = \"_blank\";\n      } else {\n        urlAppOpen = \"/messageCenterWin64\";\n        windowMode = \"fullscreen='yes'\";\n      }\n\n      iconApp = iconConnectM;\n      break;\n\n    case \"PowerChart Touch\":\n      urlAppOpen = \"/patient-list\";\n      windowModeType = \"_blank\";\n      iconApp = iconPCT;\n      break;\n\n    case \"PowerChart\":\n      urlAppOpen = \"/patientListImgWin64\";\n      windowMode = \"fullscreen='yes'\";\n      iconApp = iconPower;\n      break;\n\n    default:\n      break;\n  }\n\n  const onMouseEnterHandler = () => setHoverIcon(!hoverIcon);\n\n  const onMouseLeaveHandler = () => setHoverIcon(!hoverIcon);\n\n  const handleClick = e => {\n    recentApplications(e);\n    toogleModalAction(\"Something happend, check Apps Glance in Today's view\");\n  };\n\n  const handlePinClick = element => {\n    pinnedApplications(element);\n  };\n\n  switch (appName) {\n    case \"Connect Messenger\":\n      validApps = true;\n      break;\n\n    case \"PowerChart Touch\":\n      validApps = true;\n      break;\n\n    case \"PowerChart\":\n      validApps = true;\n      break;\n\n    default:\n      validApps = false;\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"js-single-application\",\n    className: \"single-application\",\n    onMouseEnter: onMouseEnterHandler,\n    onMouseLeave: onMouseLeaveHandler,\n    onClick: e => {\n      if (!validApps) {\n        handleClick(e.target);\n      }\n    },\n    children: [validApps ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [iconApp.length > 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconApp,\n        alt: appName,\n        className: \"single-app-iconApps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-application-dummy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"\",\n        onClick: () => {\n          window.open(urlAppOpen, windowModeType, windowMode);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"single-application-labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: appName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: applicationType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [appIcon ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"appIcon\",\n        alt: appName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-application-dummy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"single-application-labels\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: appName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: applicationType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-app-pinIcon\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        title: \"Pin Application\",\n        onClick: () => {\n          if (!validApps) {\n            handlePinClick(appName);\n          }\n        },\n        children: hoverIcon && !validApps ? /*#__PURE__*/_jsxDEV(BsFillPinFill, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 38\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleApplication, \"OWAmbYbTYySOVCWKDEXTEZ0Yd30=\");\n\n_c = SingleApplication;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleApplication\");","map":{"version":3,"sources":["/Users/miguel_hernandez1/Desktop/Files/TrainingCode/LaunchpadPrototypesForTesting/launchpad-prototype-experiments/src/components/single-application/SingleApplication.jsx"],"names":["React","useState","iconConnectM","iconPCT","iconPower","BsFillPinFill","SingleApplication","props","appName","appIcon","applicationType","id","recentApplications","pinnedApplications","toogleModalAction","hoverIcon","setHoverIcon","validApps","urlAppOpen","windowModeType","windowMode","iconApp","onMouseEnterHandler","onMouseLeaveHandler","handleClick","e","handlePinClick","element","target","length","window","open"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./SingleApplication.scss\";\nimport { iconConnectM, iconPCT, iconPower } from \"../AssetsFiles\";\nimport { BsFillPinFill } from \"react-icons/bs\";\n\nexport default function SingleApplication(props) {\n  const {\n    appName,\n    appIcon,\n    applicationType,\n    id,\n    recentApplications,\n    pinnedApplications,\n    toogleModalAction,\n  } = props;\n  const [hoverIcon, setHoverIcon] = useState(false);\n  let validApps = false;\n  let urlAppOpen = \"\",\n    windowModeType = \"\",\n    windowMode = \"\",\n    iconApp = \"\";\n  switch (appName) {\n    case \"Connect Messenger\":\n      if (id === 592) {\n        urlAppOpen = \"/messageCenterWinTouch\";\n        windowModeType = \"_blank\";\n      } else {\n        urlAppOpen = \"/messageCenterWin64\";\n        windowMode = \"fullscreen='yes'\";\n      }\n      iconApp = iconConnectM;\n      break;\n    case \"PowerChart Touch\":\n      urlAppOpen = \"/patient-list\";\n      windowModeType = \"_blank\";\n      iconApp = iconPCT;\n      break;\n    case \"PowerChart\":\n      urlAppOpen = \"/patientListImgWin64\";\n      windowMode = \"fullscreen='yes'\";\n      iconApp = iconPower;\n      break;\n    default:\n      break;\n  }\n  const onMouseEnterHandler = () => setHoverIcon(!hoverIcon);\n  const onMouseLeaveHandler = () => setHoverIcon(!hoverIcon);\n  const handleClick = (e) => {\n    recentApplications(e);\n    toogleModalAction(\"Something happend, check Apps Glance in Today's view\");\n  };\n  const handlePinClick = (element) => {\n    pinnedApplications(element);\n  };\n  switch (appName) {\n    case \"Connect Messenger\":\n      validApps = true;\n      break;\n    case \"PowerChart Touch\":\n      validApps = true;\n      break;\n    case \"PowerChart\":\n      validApps = true;\n      break;\n    default:\n      validApps = false;\n      break;\n  }\n  return (\n    <div\n      id=\"js-single-application\"\n      className=\"single-application\"\n      onMouseEnter={onMouseEnterHandler}\n      onMouseLeave={onMouseLeaveHandler}\n      onClick={(e) => {\n        if (!validApps) {\n          handleClick(e.target);\n        }\n      }}\n    >\n      {validApps ? (\n        <>\n          {iconApp.length > 0 ? (\n            <img src={iconApp} alt={appName} className=\"single-app-iconApps\" />\n          ) : (\n            <div className=\"single-application-dummy\"></div>\n          )}\n          <a\n            href=\"\"\n            onClick={() => {\n              window.open(urlAppOpen, windowModeType, windowMode);\n            }}\n          >\n            <div className=\"single-application-labels\">\n              <label>{appName}</label>\n              <label>{applicationType}</label>\n            </div>\n          </a>\n        </>\n      ) : (\n        <>\n          {appIcon ? (\n            <img src=\"appIcon\" alt={appName} />\n          ) : (\n            <div className=\"single-application-dummy\"></div>\n          )}\n          <div className=\"single-application-labels\">\n            <label>{appName}</label>\n            <label>{applicationType}</label>\n          </div>\n        </>\n      )}\n      <div className=\"single-app-pinIcon\">\n        <span\n          title=\"Pin Application\"\n          onClick={() => {\n            if (!validApps) {\n              handlePinClick(appName);\n            }\n          }}\n        >\n          {hoverIcon && !validApps ? <BsFillPinFill /> : \"\"}\n        </span>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}